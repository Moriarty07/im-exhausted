#include<iostream>
#include<string>
#include<string.h>


class Complex
{
	double x;
	double y;
public:
	double getX() const
	{
		return x;
	}
	double getY() const
	{
		return y;
	}
	void setComplex(double value1, double value2)
	{
		x = value1;
		y = value2;
	}
	Complex Add(Complex l, Complex r);
	Complex Multy(Complex l, Complex r);
	bool Egual(Complex l, Complex r);
};

Complex Complex::Add(Complex l, Complex r)
{
	Complex t;
	t.x = l.x + r.x;
	t.y = l.y + r.y;
	return t;
}

Complex Complex::Multy(Complex l, Complex r)
{
	Complex t;
	t.x = l.x * r.x - l.y * r.y;
	t.y = l.x * r.y + l.y * r.x;
	return t;
}
bool Complex::Egual(Complex l, Complex r)
{
	bool f;
	if ((l.x == r.x) && (l.y == r.y))
		f = true;
	else
		f = false;
	return f;
}



int main(int argc, char* argv[])
{
	setlocale(LC_ALL, "ukr");

	{

		double x, y;
		double x1, y1;
		bool f;
		std::cout << "x = ";
		std::cin >> x;
		std::cout << "y = ";
		std::cin >> y;
		Complex a, b, c, c1, d;
		a.setComplex(x, y);
		std::cout << "x1 = ";
		std::cin >> x1;
		std::cout << "y1 = ";
		std::cin >> y1;
		b.setComplex(x1, y1);
		c = d.Add(a, b);
		std::cout << "дийсна частина суми=";
		std::cout << c.getX() << std::endl;
		std::cout << "уявна частина суми=";
		std::cout << c.getY() << std::endl;
		c1 = d.Multy(a, b);
		std::cout << "дийсна частина добутку=";
		std::cout << c1.getX() << std::endl;
		std::cout << "уявна частина добутку=";
		std::cout << c1.getY() << std::endl;
		f = d.Egual(c, c1);
		if (f)
			std::cout << "комплексни числа ривни";
		else
			std::cout << "комплексни числа не ривни";

		return 0;
	}
}
